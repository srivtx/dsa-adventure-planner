name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Build
      env:
        YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
      run: |
        # Inject API key directly into game.js instead of using separate config.js
        if [ ! -z "$YOUTUBE_API_KEY" ]; then
          # Replace the placeholder in game.js with the actual API key
          sed -i "s/window\.YOUTUBE_API_KEY || 'YOUR_API_KEY_HERE'/window.YOUTUBE_API_KEY || '$YOUTUBE_API_KEY'/g" game.js
          echo "✅ API key injected directly into game.js"
        else
          echo "⚠️ No API key found - using default placeholder"
        fi
        
        # Also create config.js as backup
        if [ ! -z "$YOUTUBE_API_KEY" ]; then
          echo "window.YOUTUBE_API_KEY = '$YOUTUBE_API_KEY';" > config.js
        else
          echo "console.log('Running in demo mode - YouTube API not configured');" > config.js
        fi
        
        # Show what we've done
        echo "Contents of modified game.js (API key line):"
        grep -n "YOUTUBE_API_KEY.*YOUR_API_KEY_HERE\|YOUTUBE_API_KEY.*AIza" game.js || echo "API key successfully injected"
        echo "Files in root directory:"
        ls -la
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

# Grant GITHUB_TOKEN the permissions required to make a Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false
